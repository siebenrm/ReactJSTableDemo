#!/usr/bin/env node

/**
 * Module dependencies.
 */

var express = require('express');
var debug = require('debug')('ReactJSTableDemo:server');
var webpack = require('webpack');
var path = require('path');
var app = express();

/**
 * Build the js from jsx using webpack
 */

var compiler = webpack({
    debug: true,
    entry: path.resolve(__dirname, '../main.jsx'),
    output: {
        path: path.resolve(__dirname, '../public/javascripts'),
        filename: 'bundle.js',
    },
    module: {
        loaders: [{
            test: /\.jsx?$/, // A regexp to test the require path. accepts either js or jsx
            loader: 'babel', // The module to load. "babel" is short for "babel-loader"
            query: {
                presets: ['react', 'es2015']
            }
        }]
    }
});

compiler.watch({ // watch options:
    aggregateTimeout: 300, // wait so long for more changes
    poll: true // use polling instead of native watchers
    // pass a number to set the polling interval
}, function(err, stats) {
  console.log (
    stats.toString({
            chunks: false, // Makes the build much quieter
            colors: true
    })
  );
});


/**
 * Create the application server
 */

app.use(express.static(path.resolve(__dirname, '../public')));

app.get('/', function (req, res) {
  res.sendFile(path.resolve(__dirname, '../index.html'));
});

app.listen(3000, function () {
  console.log('React table demo app listening on port 3000!');
});